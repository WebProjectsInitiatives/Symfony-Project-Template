####################################################################################
# symfony-project-template - Nginx - Nginx Configuration File               #

# @author: William Pinaud & Aurélien Tricard                                       #
####################################################################################

# Main NginX directive to set up a pseudo-host configuration.
# Best practice: one per file is more readable. Filename should therefore reflect the host that it configures.
server {

    # Development port here. Defined by our global Docker architecture.
    listen 10121;

    # Development env + development container FQDN *AND* development env + local container FQDN
    server_name dev.symfony-project-template.yourdomain.local symfony-project-template.yourdomain.fr;

    # Custom symfony-project-template logs go here
    error_log /var/log/nginx/error-dev-symfony-project-template.log;
    access_log /var/log/nginx/access-dev-symfony-project-template.log;

    # This fallback case should never be called, but as a pitfall, if a request defaults somewhere,
    # it should end up here at worst.
    root /projects/symfony-project-template/public;

    # This is the PHP-FPM / Symfony backend conf, everything further goes through here.
    # This URL is nested within the main one.
    location / {

        # Simple precaution: forget about autoindexing, we know we won't need it.
        autoindex off;

        # @SEE https://symfony.com/doc/current/setup/web_server_configuration.html
        # We use the standard try_files directive in a block that catches all URI's.
        try_files $uri /index.php$is_args$args;
    }


    # Pass all PHP streams (or detected as such) to FPM via FastCGI protocol
    # Note that we're enforcing the file name to make sure nothing else goes through.
    # URIs sould therefore contain *index.php, ending with a slash or nothing else.
    location ~ index\.php(/|$) {

        # Sets a file name that will be appended after a URI that ends with a slash,
        # in the value of the $fastcgi_script_name variable.
        fastcgi_index            index.php;

        # Passthrough network parameters. This could be a socket if containers were common with PHP-FPM.
        # Note that the alias is handled by Docker after building the images and networks.
        # Port should match the configuration of the target PHP-FPM container.
        fastcgi_pass             symfony-project-template-dev-php-fpm:10221;

        # Defines a regular expression that captures a value for the $fastcgi_path_info variable.
        # The regular expression should have two captures:
        # - the first becomes a value of the $fastcgi_script_name variable,
        # - the second becomes a value of the $fastcgi_path_info variable.
        fastcgi_split_path_info  ^(.+\.php)(/.*)$;

        # This includes close-to-generic included values from the NginX docs.
        # Several of these values are overwritten here after being read from file inclusion.
        # They're left on purpose in the case someone tries to erase them here.
        include                  dev-fastcgi-params;

        # This normally is $document_root$fastcgi_script_name,
        # which in our configuration would always point to /projects/symfony-project-template/frontend - the wrong application!
        # Doc says: "file path for the current request, based on the root or alias directives, and the request URI"
        fastcgi_param            SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;

        # When using the fastcgi_split_path_info directive as above, the $fastcgi_script_name variable
        # equals the value of the first capture set by the directive.
        # Doc says: "request URI or, if a URI ends with a slash, request URI with an index file name
        # configured by the fastcgi_index directive appended to it."
        fastcgi_param            SCRIPT_NAME      $fastcgi_script_name;

        # Doc says: "an absolute pathname corresponding to the root or alias directive’s value
        # for the current request, with all symbolic links resolved to real paths"
        # This sets up the internal path to which PHP-FPM should start searching scripts from.
        # Better set the same value as the NginX one, otherwise you'd lose yourself. ;)
        fastcgi_param            DOCUMENT_ROOT    $realpath_root;

        # This sets up the environment variable from Symfony, passed through PHP-FPM
        fastcgi_param            APP_ENV          dev;

        # This removes the URIs that include the front controller as a part of them.
        # http://domain.tld/index.php/some-path and http://domain.tld/some-path are supposed to work the same.
        # This removes possible ambiguity between both, and further referencing / SEO troubleshooting needs.
        internal;

    }

    # Return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    # @SEE https://symfony.com/doc/current/setup/web_server_configuration.html
    location ~ \.php$ {
        return 404;
    }

}